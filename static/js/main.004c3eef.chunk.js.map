{"version":3,"sources":["components/SideMenu.js","components/Header.js","components/PageHeader.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","components/useForm.js","services/employeeService.js","pages/Employees/EmployeeForm.js","components/useTable.js","components/Popup.js","components/Notification.js","components/ConfirmDialog.js","pages/Employees/Employees.js","App/App.js","serviceWorker.js","index.js"],"names":["withStyles","sideMenu","display","flexDirection","position","left","width","height","backgroundColor","props","classes","className","useStyles","makeStyles","theme","root","searchInput","opacity","padding","spacing","fontSize","marginRight","Header","AppBar","Toolbar","Grid","container","alignItems","item","InputBase","placeholder","startAdornment","sm","IconButton","Badge","badgeContent","color","pageHeader","marginBottom","pageIcon","pageTitle","paddingLeft","PageHeader","title","subTitle","icon","Paper","elevation","square","Card","Typography","variant","component","margin","label","textTransform","minWidth","secondary","palette","light","main","primary","Controls","Input","name","value","error","onChange","other","TextField","helperText","RadioGroup","items","FormControl","FormLabel","row","map","FormControlLabel","id","control","Radio","Select","options","InputLabel","MenuItem","FormHelperText","Checkbox","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","Button","text","size","onClick","ActionButton","children","Form","autoComplete","KEYS","insertEmployee","data","employees","getAllEmployees","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","push","JSON","stringify","parse","departments","x","department","departmentId","genderItems","initialFValues","fullName","email","mobile","city","gender","hireDate","Date","isPermanent","EmployeeForm","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","validateOnChange","useState","setValues","handleInputChange","resetForm","useForm","useEffect","onSubmit","preventDefault","xs","type","table","marginTop","fontWeight","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","dialogWrapper","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","flexGrow","DialogContent","dividers","Notification","notify","setNotify","handleClose","reason","isOpen","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","message","dialog","textAlign","dialogContent","dialogAction","justifyContent","titleIcon","ConfirmDialog","confirmDialog","setConfirmDialog","disableRipple","DialogActions","onConfirm","pageContent","newButton","right","Employees","setRecordForEdit","employeeService","setRecords","setFilterFn","onDelete","filter","InputProps","InputAdornment","toLowerCase","includes","startIcon","TableBody","openInPopup","employee","recordIndex","findIndex","createMuiTheme","background","default","overrides","MuiAppBar","transform","MuiIconButton","appMain","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.004c3eef.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles, withStyles } from \"@material-ui/core\";\n\n// withStyles & makeStyles\n\nconst style = {\n    sideMenu: {\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'absolute',\n        left: '0px',\n        width: '320px',\n        height: '100%',\n        backgroundColor: '#253053'\n    }\n}\n\nconst SideMenu = (props) => {\n    const { classes } = props;\n    return (\n        <div className={classes.sideMenu}>\n\n        </div>\n    )\n}\n\nexport default withStyles(style)(SideMenu);\n","import React from 'react'\nimport { AppBar, Toolbar, Grid, InputBase, IconButton, Badge, makeStyles } from '@material-ui/core'\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fff',\n        \n    },\n    searchInput: {\n        opacity: '0.6',\n        padding: `0px ${theme.spacing(1)}px`,\n        fontSize: '0.8rem',\n        '&:hover': {\n            backgroundColor: '#f2f2f2'\n        },\n        '& .MuiSvgIcon-root': {\n            marginRight: theme.spacing(1)\n        }\n    }\n}))\n\nexport default function Header() {\n\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar>\n                <Grid container\n                    alignItems=\"center\">\n                    <Grid item>\n                        <InputBase\n                            placeholder=\"Search topics\"\n                            className={classes.searchInput}\n                            startAdornment={<SearchIcon fontSize=\"small\" />}\n                        />\n                    </Grid>\n                    <Grid item sm></Grid>\n                    <Grid item>\n                        <IconButton>\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <NotificationsNoneIcon fontSize=\"small\" />\n                            </Badge>\n                        </IconButton>\n                        <IconButton>\n                            <Badge badgeContent={3} color=\"primary\">\n                                <ChatBubbleOutlineIcon fontSize=\"small\" />\n                            </Badge>\n                        </IconButton>\n                        <IconButton>\n                            <PowerSettingsNewIcon fontSize=\"small\" />\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    )\n}\n","import React from 'react'\nimport { Paper, Card, Typography, makeStyles, Button } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fdfdff'\n    },\n    pageHeader:{\n        padding:theme.spacing(4),\n        display:'flex',\n        marginBottom:theme.spacing(2)\n    },\n    pageIcon:{\n        display:'inline-block',\n        padding:theme.spacing(2),\n        color:'#3c44b1'\n    },\n    pageTitle:{\n        paddingLeft:theme.spacing(4),\n        '& .MuiTypography-subtitle2':{\n            opacity:'0.6'\n        }\n    }\n}))\n\nexport default function PageHeader(props) {\n\n    const classes = useStyles();\n    const { title, subTitle, icon } = props;\n    return (\n        <Paper elevation={0} square className={classes.root}>\n            <div className={classes.pageHeader}>\n                <Card className={classes.pageIcon}>\n                    {icon}\n                </Card>\n                <div className={classes.pageTitle}>\n                    <Typography\n                        variant=\"h6\"\n                        component=\"div\">\n                        {title}</Typography>\n                    <Typography\n                        variant=\"subtitle2\"\n                        component=\"div\">\n                        {subTitle}</Typography>\n                </div>\n            </div>\n        </Paper>\n    )\n}\n","import React from 'react'\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(0.5)\n    },\n    label: {\n        textTransform: 'none'\n    }\n}))\n\nexport default function Button(props) {\n\n    const { text, size, color, variant, onClick, ...other } = props\n    const classes = useStyles();\n\n    return (\n        <MuiButton\n            variant={variant || \"contained\"}\n            size={size || \"large\"}\n            color={color || \"primary\"}\n            onClick={onClick}\n            {...other}\n            classes={{ root: classes.root, label: classes.label }}>\n            {text}\n        </MuiButton>\n    )\n}\n","import React from 'react'\nimport { Button, makeStyles } from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        minWidth: 0,\n        margin: theme.spacing(0.5)\n    },\n    secondary: {\n        backgroundColor: theme.palette.secondary.light,\n        '& .MuiButton-label': {\n            color: theme.palette.secondary.main,\n        }\n    },\n    primary: {\n        backgroundColor: theme.palette.primary.light,\n        '& .MuiButton-label': {\n            color: theme.palette.primary.main,\n        }\n    },\n}))\n\nexport default function ActionButton(props) {\n\n    const { color, children, onClick } = props;\n    const classes = useStyles();\n\n    return (\n        <Button\n            className={`${classes.root} ${classes[color]}`}\n            onClick={onClick}>\n            {children}\n        </Button>\n    )\n}\n","import Input from \"./Input\";\nimport RadioGroup from \"./RadioGroup\";\nimport Select from \"./Select\";\nimport Checkbox from \"./Checkbox\";\nimport DatePicker from \"./DatePicker\";\nimport Button from \"./Button\";\nimport ActionButton from \"./ActionButton\";\n\nconst Controls = {\n    Input,\n    RadioGroup,\n    Select,\n    Checkbox,\n    DatePicker,\n    Button,\n    ActionButton\n}\n\nexport default Controls;","import React from 'react'\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n\n    const { name, label, value,error=null, onChange, ...other } = props;\n    return (\n        <TextField\n            variant=\"outlined\"\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...other}\n            {...(error && {error:true,helperText:error})}\n        />\n    )\n}\n","import React from 'react'\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\n\nexport default function RadioGroup(props) {\n\n    const { name, label, value, onChange, items } = props;\n\n    return (\n        <FormControl>\n            <FormLabel>{label}</FormLabel>\n            <MuiRadioGroup row\n                name={name}\n                value={value}\n                onChange={onChange}>\n                {\n                    items.map(\n                        item => (\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\n                        )\n                    )\n                }\n            </MuiRadioGroup>\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\n\nexport default function Select(props) {\n\n    const { name, label, value,error=null, onChange, options } = props;\n\n    return (\n        <FormControl variant=\"outlined\"\n        {...(error && {error:true})}>\n            <InputLabel>{label}</InputLabel>\n            <MuiSelect\n                label={label}\n                name={name}\n                value={value}\n                onChange={onChange}>\n                <MenuItem value=\"\">None</MenuItem>\n                {\n                    options.map(\n                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                    )\n                }\n            </MuiSelect>\n            {error && <FormHelperText>{error}</FormHelperText>}\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\n\nexport default function Checkbox(props) {\n\n    const { name, label, value, onChange } = props;\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <FormControl>\n            <FormControlLabel\n                control={<MuiCheckbox\n                    name={name}\n                    color=\"primary\"\n                    checked={value}\n                    onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}\n                />}\n                label={label}\n            />\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default function DatePicker(props) {\n\n    const { name, label, value, onChange } = props\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\n                label={label}\n                format=\"MMM/dd/yyyy\"\n                name={name}\n                value={value}\n                onChange={date =>onChange(convertToDefEventPara(name,date))}\n\n            />\n        </MuiPickersUtilsProvider>\n    )\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from \"@material-ui/core\";\n\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n\n\n    const [values, setValues] = useState(initialFValues);\n    const [errors, setErrors] = useState({});\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n        if (validateOnChange)\n            validate({ [name]: value })\n    }\n\n    const resetForm = () => {\n        setValues(initialFValues);\n        setErrors({})\n    }\n\n\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n\n    }\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiFormControl-root': {\n            width: '80%',\n            margin: theme.spacing(1)\n        }\n    }\n}))\n\nexport function Form(props) {\n\n    const classes = useStyles();\n    const { children, ...other } = props;\n    return (\n        <form className={classes.root} autoComplete=\"off\" {...other}>\n            {props.children}\n        </form>\n    )\n}\n\n","const KEYS = {\n    employees: 'employees',\n    employeeId: 'employeeId'\n}\n\nexport const getDepartmentCollection = () => ([\n    { id: '1', title: 'Development' },\n    { id: '2', title: 'Marketing' },\n    { id: '3', title: 'Accounting' },\n    { id: '4', title: 'HR' },\n])\n\nexport function insertEmployee(data) {\n    let employees = getAllEmployees();\n    data['id'] = generateEmployeeId()\n    employees.push(data)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\n}\n\nexport function updateEmployee(data) {\n    let employees = getAllEmployees();\n    let recordIndex = employees.findIndex(x => x.id == data.id);\n    employees[recordIndex] = { ...data }\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function deleteEmployee(id) {\n    let employees = getAllEmployees();\n    employees = employees.filter(x => x.id != id)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function generateEmployeeId() {\n    if (localStorage.getItem(KEYS.employeeId) == null)\n        localStorage.setItem(KEYS.employeeId, '0')\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\n    return id;\n}\n\nexport function getAllEmployees() {\n    if (localStorage.getItem(KEYS.employees) == null)\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\n    //map departmentID to department title\n    let departments = getDepartmentCollection();\n    return employees.map(x => ({\n        ...x,\n        department: departments[x.departmentId - 1].title\n    }))\n}","import React, { useState, useEffect } from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport * as employeeService from \"../../services/employeeService\";\n\n\nconst genderItems = [\n    { id: 'male', title: 'Male' },\n    { id: 'female', title: 'Female' },\n    { id: 'other', title: 'Other' },\n]\n\nconst initialFValues = {\n    id: 0,\n    fullName: '',\n    email: '',\n    mobile: '',\n    city: '',\n    gender: 'male',\n    departmentId: '',\n    hireDate: new Date(),\n    isPermanent: false,\n}\n\nexport default function EmployeeForm(props) {\n    const { addOrEdit, recordForEdit } = props\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\n        if ('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n        if ('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\n        if ('departmentId' in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() => {\n        if (recordForEdit != null)\n            setValues({\n                ...recordForEdit\n            })\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"fullName\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        error={errors.fullName}\n                    />\n                    <Controls.Input\n                        label=\"Email\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n                    <Controls.Input\n                        label=\"Mobile\"\n                        name=\"mobile\"\n                        value={values.mobile}\n                        onChange={handleInputChange}\n                        error={errors.mobile}\n                    />\n                    <Controls.Input\n                        label=\"City\"\n                        name=\"city\"\n                        value={values.city}\n                        onChange={handleInputChange}\n                    />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.RadioGroup\n                        name=\"gender\"\n                        label=\"Gender\"\n                        value={values.gender}\n                        onChange={handleInputChange}\n                        items={genderItems}\n                    />\n                    <Controls.Select\n                        name=\"departmentId\"\n                        label=\"Department\"\n                        value={values.departmentId}\n                        onChange={handleInputChange}\n                        options={employeeService.getDepartmentCollection()}\n                        error={errors.departmentId}\n                    />\n                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    <Controls.Checkbox\n                        name=\"isPermanent\"\n                        label=\"Permanent Employee\"\n                        value={values.isPermanent}\n                        onChange={handleInputChange}\n                    />\n\n                    <div>\n                        <Controls.Button\n                            type=\"submit\"\n                            text=\"Submit\" />\n                        <Controls.Button\n                            text=\"Reset\"\n                            color=\"default\"\n                            onClick={resetForm} />\n                    </div>\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}\n","import React, { useState } from 'react'\nimport { Table, TableHead, TableRow, TableCell, makeStyles, TablePagination, TableSortLabel } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        marginTop: theme.spacing(3),\n        '& thead th': {\n            fontWeight: '600',\n            color: theme.palette.primary.main,\n            backgroundColor: theme.palette.primary.light,\n        },\n        '& tbody td': {\n            fontWeight: '300',\n        },\n        '& tbody tr:hover': {\n            backgroundColor: '#fffbf2',\n            cursor: 'pointer',\n        },\n    },\n}))\n\nexport default function useTable(records, headCells,filterFn) {\n\n    const classes = useStyles();\n\n    const pages = [5, 10, 25]\n    const [page, setPage] = useState(0)\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\n    const [order, setOrder] = useState()\n    const [orderBy, setOrderBy] = useState()\n\n    const TblContainer = props => (\n        <Table className={classes.table}>\n            {props.children}\n        </Table>\n    )\n\n    const TblHead = props => {\n\n        const handleSortRequest = cellId => {\n            const isAsc = orderBy === cellId && order === \"asc\";\n            setOrder(isAsc ? 'desc' : 'asc');\n            setOrderBy(cellId)\n        }\n\n        return (<TableHead>\n            <TableRow>\n                {\n                    headCells.map(headCell => (\n                        <TableCell key={headCell.id}\n                            sortDirection={orderBy === headCell.id ? order : false}>\n                            {headCell.disableSorting ? headCell.label :\n                                <TableSortLabel\n                                    active={orderBy === headCell.id}\n                                    direction={orderBy === headCell.id ? order : 'asc'}\n                                    onClick={() => { handleSortRequest(headCell.id) }}>\n                                    {headCell.label}\n                                </TableSortLabel>\n                            }\n                        </TableCell>))\n                }\n            </TableRow>\n        </TableHead>)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10))\n        setPage(0);\n    }\n\n    const TblPagination = () => (<TablePagination\n        component=\"div\"\n        page={page}\n        rowsPerPageOptions={pages}\n        rowsPerPage={rowsPerPage}\n        count={records.length}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n    />)\n\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    const recordsAfterPagingAndSorting = () => {\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\n    }\n\n    return {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    }\n}\n","import React from 'react'\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography } from '@material-ui/core';\nimport Controls from \"./controls/Controls\";\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n    dialogWrapper: {\n        padding: theme.spacing(2),\n        position: 'absolute',\n        top: theme.spacing(5)\n    },\n    dialogTitle: {\n        paddingRight: '0px'\n    }\n}))\n\nexport default function Popup(props) {\n\n    const { title, children, openPopup, setOpenPopup } = props;\n    const classes = useStyles();\n\n    return (\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\n            <DialogTitle className={classes.dialogTitle}>\n                <div style={{ display: 'flex' }}>\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\n                        {title}\n                    </Typography>\n                    <Controls.ActionButton\n                        color=\"secondary\"\n                        onClick={()=>{setOpenPopup(false)}}>\n                        <CloseIcon />\n                    </Controls.ActionButton>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers>\n                {children}\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport { Snackbar, makeStyles } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        top: theme.spacing(9)\n    }\n}))\n\nexport default function Notification(props) {\n\n    const { notify, setNotify } = props;\n    const classes = useStyles()\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setNotify({\n            ...notify,\n            isOpen: false\n        })\n    }\n\n    return (\n        <Snackbar\n            className={classes.root}\n            open={notify.isOpen}\n            autoHideDuration={3000}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            onClose={handleClose}>\n            <Alert\n                severity={notify.type}\n                onClose={handleClose}>\n                {notify.message}\n            </Alert>\n        </Snackbar>\n    )\n}\n","import React from 'react'\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, IconButton } from '@material-ui/core'\nimport Controls from \"./controls/Controls\";\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\n\n\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        padding: theme.spacing(2),\n        position: 'absolute',\n        top: theme.spacing(5)\n    },\n    dialogTitle: {\n        textAlign: 'center'\n    },\n    dialogContent: {\n        textAlign: 'center'\n    },\n    dialogAction: {\n        justifyContent: 'center'\n    },\n    titleIcon: {\n        backgroundColor: theme.palette.secondary.light,\n        color: theme.palette.secondary.main,\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.light,\n            cursor: 'default'\n        },\n        '& .MuiSvgIcon-root': {\n            fontSize: '8rem',\n        }\n    }\n}))\n\nexport default function ConfirmDialog(props) {\n\n    const { confirmDialog, setConfirmDialog } = props;\n    const classes = useStyles()\n\n    return (\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\n            <DialogTitle className={classes.dialogTitle}>\n                <IconButton disableRipple className={classes.titleIcon}>\n                    <NotListedLocationIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent}>\n                <Typography variant=\"h6\">\n                    {confirmDialog.title}\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    {confirmDialog.subTitle}\n                </Typography>\n            </DialogContent>\n            <DialogActions className={classes.dialogAction}>\n                <Controls.Button\n                    text=\"No\"\n                    color=\"default\"\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} />\n                <Controls.Button\n                    text=\"Yes\"\n                    color=\"secondary\"\n                    onClick={confirmDialog.onConfirm} />\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\nimport EmployeeForm from \"./EmployeeForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\nimport useTable from \"../../components/useTable\";\nimport * as employeeService from \"../../services/employeeService\";\nimport Controls from \"../../components/controls/Controls\";\nimport { Search } from \"@material-ui/icons\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from \"../../components/Popup\";\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Notification from \"../../components/Notification\";\nimport ConfirmDialog from \"../../components/ConfirmDialog\";\n\nconst useStyles = makeStyles(theme => ({\n    pageContent: {\n        margin: theme.spacing(5),\n        padding: theme.spacing(3)\n    },\n    searchInput: {\n        width: '75%'\n    },\n    newButton: {\n        position: 'absolute',\n        right: '10px'\n    }\n}))\n\n\nconst headCells = [\n    { id: 'fullName', label: 'Employee Name' },\n    { id: 'email', label: 'Email Address (Personal)' },\n    { id: 'mobile', label: 'Mobile Number' },\n    { id: 'department', label: 'Department' },\n    { id: 'actions', label: 'Actions', disableSorting: true }\n]\n\nexport default function Employees() {\n\n    const classes = useStyles();\n    const [recordForEdit, setRecordForEdit] = useState(null)\n    const [records, setRecords] = useState(employeeService.getAllEmployees())\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\n    const [openPopup, setOpenPopup] = useState(false)\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(records, headCells, filterFn);\n\n    const handleSearch = e => {\n        let target = e.target;\n        setFilterFn({\n            fn: items => {\n                if (target.value == \"\")\n                    return items;\n                else\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\n            }\n        })\n    }\n\n    const addOrEdit = (employee, resetForm) => {\n        if (employee.id == 0)\n            employeeService.insertEmployee(employee)\n        else\n            employeeService.updateEmployee(employee)\n        resetForm()\n        setRecordForEdit(null)\n        setOpenPopup(false)\n        setRecords(employeeService.getAllEmployees())\n        setNotify({\n            isOpen: true,\n            message: 'Submitted Successfully',\n            type: 'success'\n        })\n    }\n\n    const openInPopup = item => {\n        setRecordForEdit(item)\n        setOpenPopup(true)\n    }\n\n    const onDelete = id => {\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        })\n        employeeService.deleteEmployee(id);\n        setRecords(employeeService.getAllEmployees())\n        setNotify({\n            isOpen: true,\n            message: 'Deleted Successfully',\n            type: 'error'\n        })\n    }\n\n    return (\n        <>\n            <PageHeader\n                title=\"New Employee\"\n                subTitle=\"Form design with validation\"\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\n            />\n            <Paper className={classes.pageContent}>\n\n                <Toolbar>\n                    <Controls.Input\n                        label=\"Search Employees\"\n                        className={classes.searchInput}\n                        InputProps={{\n                            startAdornment: (<InputAdornment position=\"start\">\n                                <Search />\n                            </InputAdornment>)\n                        }}\n                        onChange={handleSearch}\n                    />\n                    <Controls.Button\n                        text=\"Add New\"\n                        variant=\"outlined\"\n                        startIcon={<AddIcon />}\n                        className={classes.newButton}\n                        onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\n                    />\n                </Toolbar>\n                <TblContainer>\n                    <TblHead />\n                    <TableBody>\n                        {\n                            recordsAfterPagingAndSorting().map(item =>\n                                (<TableRow key={item.id}>\n                                    <TableCell>{item.fullName}</TableCell>\n                                    <TableCell>{item.email}</TableCell>\n                                    <TableCell>{item.mobile}</TableCell>\n                                    <TableCell>{item.department}</TableCell>\n                                    <TableCell>\n                                        <Controls.ActionButton\n                                            color=\"primary\"\n                                            onClick={() => { openInPopup(item) }}>\n                                            <EditOutlinedIcon fontSize=\"small\" />\n                                        </Controls.ActionButton>\n                                        <Controls.ActionButton\n                                            color=\"secondary\"\n                                            onClick={() => {\n                                                setConfirmDialog({\n                                                    isOpen: true,\n                                                    title: 'Are you sure to delete this record?',\n                                                    subTitle: \"You can't undo this operation\",\n                                                    onConfirm: () => { onDelete(item.id) }\n                                                })\n                                            }}>\n                                            <CloseIcon fontSize=\"small\" />\n                                        </Controls.ActionButton>\n                                    </TableCell>\n                                </TableRow>)\n                            )\n                        }\n                    </TableBody>\n                </TblContainer>\n                <TblPagination />\n            </Paper>\n            <Popup\n                title=\"Employee Form\"\n                openPopup={openPopup}\n                setOpenPopup={setOpenPopup}\n            >\n                <EmployeeForm\n                    recordForEdit={recordForEdit}\n                    addOrEdit={addOrEdit} />\n            </Popup>\n            <Notification\n                notify={notify}\n                setNotify={setNotify}\n            />\n            <ConfirmDialog\n                confirmDialog={confirmDialog}\n                setConfirmDialog={setConfirmDialog}\n            />\n        </>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport SideMenu from \"../components/SideMenu\";\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport Header from \"../components/Header\";\nimport PageHeader from '../components/PageHeader';\n\nimport Employees from \"../pages/Employees/Employees\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#333996\",\n      light: '#3c44b126'\n    },\n    secondary: {\n      main: \"#f83245\",\n      light: '#f8324526'\n    },\n    background: {\n      default: \"#f4f5fd\"\n    },\n  },\n  overrides:{\n    MuiAppBar:{\n      root:{\n        transform:'translateZ(0)'\n      }\n    }\n  },\n  props:{\n    MuiIconButton:{\n      disableRipple:true\n    }\n  }\n})\n\n\nconst useStyles = makeStyles({\n  appMain: {\n    paddingLeft: '320px',\n    width: '100%'\n  }\n})\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SideMenu />\n      <div className={classes.appMain}>\n        <Header />\n        \n        <Employees />\n      </div>\n      <CssBaseline />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}